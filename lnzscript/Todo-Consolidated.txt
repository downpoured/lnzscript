todo:
command line escaping is less trivial than I thought.
http://webcache.googleusercontent.com/search?q=cache:MS28vtWRm7EJ:www.eightypercent.net/Archive/2004/12/05.html+windows+command+line+quote+escape&cd=5&hl=en&ct=clnk&gl=us&client=firefox-a
http://stackoverflow.com/questions/251557/escape-angle-brackets-in-a-windows-command-prompt

Oh, default command should be to Edit, not to Open! have different verbs

document  System.windowsVersion();
document all these changes
rename everything to .jsz rather than .js
<std>, prototype array.clone interferes w for (var i in)
none are useful but clone, shuffle. have math.shuffle?
file.dirList changed. document

Emphasize strengths: 
	run w/o saving, using clipboard. one-off scripts, using clipboard. cliptolower, etc. 
	rename / file manip is cool useful. file processing, without import os, import shutil, and so on. fast renaming/file moving...
	javascript with @'hi' strings
	clipboard app
		(as an aside, it's also good at functional programming)

For version 0.4
	
	Examples
		Include more examples. Done.
		Set up wiki for examples. Done - see project page. http://code.google.com/p/launchorz/wiki/
	
	Editor
		Point to correct website, not sites.google.com. Done.
		
		bug in editor: if provide arguments, should replace \ with \\, before passing.
		Docviewer's "view doc online" button, fix url.
		clicking error lines in Untitled.js, opens the working untitled.js file...
		//if untitled.tmp.js, don't show error? possible? -- Done
		@"test" is green. intentional?
		
	Scripts
		System.openControlPanel and System.openUtility should be cleaned up, probably using an enum
			(User would type System.openControlPanel(System.Panel_Keyboard))
			http://msdn.microsoft.com/en-us/library/cc144191(VS.85).aspx
			http://msdn.microsoft.com/en-us/library/ee330741(v=VS.85).aspx
		see object_properties.cpp
		WindowStyle. --Done
		File.getPathSpecial
		File.openExplorerWindowSpecial
		System.openControlPanel
		System.openUtility
		Done, now just document.
	
		addition: assert. however, this gives line number 0; not useful.
		what's actually more useful is a Reference error "if(false) sdsdf();" because it gives the line number... weird...
		old assert assert = function(b) { if (!b) throw 'assertion failed'; return true;}
	
		File.createShortcut, allow a target with arguments. http://lists.trolltech.com/qt-interest/2005-01/msg00241.html
		wincommondialog input dialog, Dialog.input, field should get focus  --DONE.
		
		file.getShortcutTarget, and others from QT  should return paths like c:\foo not c:/foo. -Done
		File.dirListFiles - list all entries matching *.txt and so on. --Done
		
		File.createShortcut fix
		Filr. copyDialog can copy an entire dir.! rename this!
		File.copyDirectory, File.moveDirectory (with subdirs)
			http://stackoverflow.com/questions/2536524/copy-directory-using-qt ?
		The line File.copyDialog(@'C:\Users\inspy\Documents\autoit-v3-sfx\test1', @'C:\Users\inspy\Documents\autoit-v3-sfx\test2');
			kills lnzscirpt!! --fixed, was nullptr
		
		-File.dirWalk - to make recursing through directories easier. use python's algorithms?
		
		equivalents of os.path, os.path.join, os.path.split. UNC paths? weird paths? --Done
		Clipboard.getText has small buffer... Done. Fixed. to be 16k
		
		main console-
			lnzscript.exe foo.jsz runs, instead of lnzscript.exe /f foo.jsz --Done
			untitled.tmp.js hack -- Done
			
		Disabled array prototype functions. 
		Math.shuffleArray not array.Shuffle()
		
		Should not pass "" "" "" "" arguments to scripts

Make it good at renaming files!
File.cd(@'targetdir')
Renamer.testRename('*.doc', '*.zip')
Renamer.renameInFilenames(
	testRename previews results
	in fact, give it a preview function. This can be implemented in script.


	Other
		Make an installer that associates .jsz. even drag/drop onto, py does that
		
		File.pathjoin
		test path-related functions in a share like \\foo. Done. test util_fixQtDirectorySlashes. Done.
		
Punted
	unify between NirCmd / Au3 window and dialog commands
	
	dev environment-make working directories clear, clear up build process, and build doc process
	Make editor.exe more visible when you download it? -- since in the start menu, ok.
	Use qsrand() to seed rng. strangely, the 1st generated seems similar. QDateTime::currentDateTime().toTime_t() and qsrand?
	print() itself  has a small buffer...
	different return code if syntax error? punt.
	directory walking
	File.tray should be system.cdTray

A possible example- turning .url files into one text summary

Guidelines
	Focus on things that python isn't good at. Maybe we can have better file/handling, quick scripts to rename files, etc.
		(could look at Python's shellutil for copy file, copy directory, move directory, etc. recurse through dir, too, maybe.)
	Look at ahk for possible.
	Look at good Au3 /ahk scripts online


Probably for later release
	Internet.downloadURL. Wget-like URL retrieval would be nice. Options: 
		Python + py2exe
			(Around 1Mb)
			Current choice, because I already know it
			Also, I get zip file support nearly for free
		QtNetwork4.dll
			(1.215Mb)
			Less flexible, don't know it
		Libcurl
		What is ahk's implementation?
		Non-option - distribute w/ au3 and call it
	setEnvironmentvar
	better build env, maybe templates in subfolder instead of sources, write internal docs so that it could make sense
	@'cool' string literals could contain newlines. the processor would just turn it into \r\n

Maybe for a later release
	CallDll, depending on how hard it is to implement (see ahk src?)
	getDirectorySize
	update scite version... not worth it now
	Python can call LnzScript (extension/subprocess), LnzScript can call Python?
	
	Add more of autohotkey's code, features. could it be a backend to everything?
	
	
	We could add the following features by having a python tool. (best if a py2exe'd exe)
		ftp
		wget-like file retrieval. http sending via post/get. could automate some things that way.
		zip file (but qt also supports zip)
	
	a printerr to send to stderr
	a directory Dialog, not really worth it
	
	Interact with IE/firefox bookmarks
	
	Registr.readKey - provide way to tell reason for failure - key ? value ? type of value?
	File.driveMapAdd - provide way to tell reason for failure
	AU3_ControlTreeView, for interacting w treeviews, apparently isn't provided by the dll...
	AU3_RunAsSet, AU3_PixelChecksum, might not be used
	getDriveType (cdrom, removable
	DriveGetFileSystem (FAT, NTFS
	MemGetStats  - Retrieves memory related information.
	
	get hash using win api. requires shapi lib,
	http://weseetips.com/2008/06/27/how-to-generate-the-hash-key-of-given-data/
	// Get file icon: http://weseetips.com/2008/06/03/how-to-get-the-icon-of-a-file/#comments
	// Get program from extension: http://weseetips.com/2008/05/30/how-to-find-the-application-associated-with-particular-file-extension/
	

More unit tests...
	Test relative coords, MouseCoordMode, PixelCoordMode
	Test registry read and write, ones that return array
	
Note that we probably don't want to introduce a dependency on the large QtGui.dll
	Can use winapi (wincommondialog.exe) for msgbox, input, file dialogs. 
	SmartWin and Ultimate++, at least with default themes, look ugly.
	

