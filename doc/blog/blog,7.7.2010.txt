
My <a href="http://downpoured.github.com/lnz/">Launchorz</a> project makes it easy to automate repetitive tasks in Windows. 
Here are some of the scripts I've found to be the most useful.
(Note that they are intended for Windows 7 and might not be compatible with something earlier.)
<br/><br/>

<h3>Creating an index of all files in a directory</h3>
This script creates a text file index of all files in a directory, including subdirectories.
The output is formatted nicely by indentation level.
It uses the path of the currently open Explorer window and creates tree_files.txt.
<br/>

<pre style="font-family: Andale Mono, Lucida Console, Monaco, fixed, monospace; color: #000000; background-color: #eee;font-size: 12px;border: 1px dashed #999999;line-height: 14px;padding: 5px; overflow: auto; width: 100%"><code>include('getExplorerDirectory.js');
// activate the most-recently-used Explorer window.
Window.activate( {'class':'CabinetWClass'})
Time.sleep(100);
var strDir = getCurrentExplorerDirectory();
if (strDir)
  Process.open('cmd.exe /c tree /f /a &gt; tree_files.txt', strDir);

</code></pre>

You can download <a href="ffff">getExplorerDirectory.js</a>. 

<br/><br/>
<h3>Open command-line to the current Explorer directory</h3>
<pre style="font-family: Andale Mono, Lucida Console, Monaco, fixed, monospace; color: #000000; background-color: #eee;font-size: 12px;border: 1px dashed #999999;line-height: 14px;padding: 5px; overflow: auto; width: 100%"><code>Window.activate( {'class':'CabinetWClass'});
Time.sleep(100);
var strDir = getCurrentExplorerDirectory();
if (strDir)
  Process.openFile('cmd.exe', strDir);

</code></pre>
	
<h3>Expand repetitive code</h3>
The following lets 

<h3>Sort lines in the clipboard</h3>
<pre style="font-family: Andale Mono, Lucida Console, Monaco, fixed, monospace; color: #000000; background-color: #eee;font-size: 12px;border: 1px dashed #999999;line-height: 14px;padding: 5px; overflow: auto; width: 100%"><code>var strClipboard = Clipboard.getText();
if (strClipboard) 
{
  var arr = strClipboard.split('\r\n');
  arr.sort();
  var strResult = arr.join('\r\n');
  Clipboard.setText(strResult);
}
</code></pre>

(You could also normalize the line endings with strClipboard.replace(/\r\n/g, '\n')).


<h3>Displaying an ANSI table</h3>
<pre style="font-family: Andale Mono, Lucida Console, Monaco, fixed, monospace; color: #000000; background-color: #eee;font-size: 12px;border: 1px dashed #999999;line-height: 14px;padding: 5px; overflow: auto; width: 100%"><code>//opens an ascii table in notepad.
var s ='';
for (var i=32; i&lt;128; i++)
{
  var si = (i&lt;100)?' '+i : i.toString();
  s+= si + '\t' + String.fromCharCode(i);
  s+= '\r\n';
}
File.writeFile( File.getPathTemp()+'\\tmpascii.txt', s);
Process.open('notepad.exe '+File.getPathTemp()+'\\tmpascii.txt');
</code></pre>

Showing a simple reference of ansi characters.

<h3>Expand repeated code</h3>
When working on a quick project, or writing in a language like Verilog, sometimes the same line of code
is repeated a few times, with a different index. The following script takes a code fragment like
a[#] = b[#] & c[#];
and expands it to
a[0] = b[0] & c[0];
a[1] = b[1] & c[1];
a[2] = b[2] & c[2];
...
(This isn't a particularly useful example but it depicts what the script does).
All it does is replace the '#' character with a number.
<pre style="font-family: Andale Mono, Lucida Console, Monaco, fixed, monospace; color: #000000; background-color: #eee;font-size: 12px;border: 1px dashed #999999;line-height: 14px;padding: 5px; overflow: auto; width: 100%"><code>include('&lt;std&gt;');
var sClipboard = Clipboard.getText();
if (sClipboard  &amp;&amp; sClipboard.contains('#'))
{  
  var sRep = Dialog.input('Replace', 'How many repetitions? n=0 to ?', '3');
  if (isNumber(sRep))
  {    
    var sResult = '';
    for (var i=0; i&lt;sRep; i++)
      sResult += sClipboard.replace(/#/g, i) + '\r\n';
    Clipboard.setText(sResult);
  }
}
</code></pre>


<br/><br/>
I also have a clipboard replacement script that gives you 26 different clipboards, each recalled by a letter. 
However, there exist many other clipboard-handling tools.
<br/><br/>
To learn more about Launchorz, you can watch some screencasts <a href="http://downpoured.github.com/lnz/lnz_screencasts.html">here</a>. 
(It is similar to AutoIt, but has a full JavaScript language and namespaces).



