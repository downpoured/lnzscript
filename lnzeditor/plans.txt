LnzEditor Plans
=================


Before 0.2 release
----------------

Test cases
	cover the api with tests

Bugs
	abbrev.properties in wrong place. probably constant. "..\abbrev" -> "abbrev"
	-done
	
	System.openUtility broken
	minor bug in File.ini* for return values, returns true even if false

Tools
	Add au3_window_info and so on to the Tools menu


Documentation!
	Write use cases
		-quick one-off scripts
		project dependencies in visual studio
		open websites in different tabs
	
	"About this editor"
		Document for(23 feature
	
	
	Document '<std.js>' features
	Document argv in scripts, __included in scripts
	Document scripts start in their own directory


(Make sure to test everything in a directory with spaces in the path)



For 0.3 release
-------------------
Bugs
	File.dirListFiles() doesn't include hidden files

C++
	Add @'c:\test' feature
	
	include(), prevent something from including itself.
	
Features

	format output of on error, so that if you click output pane it will take you to error
	
	context help-lua or something looks at the words you are at, and opens the doc browser to that word


	Python features: zip, url (and eventually ftp)

	add a way to detect the Python directory
		this could be done with an lnzscript .js file
		findpython.js searches for c:\python30\python.exe, c:\python21\Python.exe, until match
		then writes a text file like _pythondir.properties
		note that "import nonexistantfile" doesn't show an error
		
	passing arguments to a run command
		should be able to just write command.go.*.py=pythonw -u "$(FileNameExt)" $(args)
		which should add quoting of arguments, and just as many arguments as needed

	Add smartwin features
		http://smartwinlib.org/doc/class_in_dialog.html
		Dialog.input
		Dialog.choice http://smartwinlib.org/doc/class_choice_string.html
		
	For System.openControlPanel and related,
		make options non-case sensitive.
	

Installer
	Optionally (but on by default) associates .js files with the editor.
	I considered the extension .jsz, but using .js means that files will be highlighted in other editors

Run tests on Vista

For 0.4? release
---------------------
Bugs

	in the Options menu, only 2 languages are included regardless of settings. not elegant
	
Documentation - consistent usage of "folder" or "directory"
consistent usage of return values - false or null or -1?

Cleanup
	make g_nircmd_directory string a static member, not a global variable
	add "licenses" directory in output




Long term
-------------
Run command. A file can, in the first line, provide a run command, such as "//# Runcommand:`run main.py`" which will be seen by Scite. 

End goal: a launchy that doesn't have to index at all

Document IDM changes/additions, provide them to Lua with the .iface file

Cleanup
	Ctrl+; and Ctrl+. are set by user.shortcuts, instead of in the C++ code. Maybe slightly less good.

scite with Python build

scite-interest list
